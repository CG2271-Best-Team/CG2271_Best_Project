Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.Init_UART2) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    main.o(.text.Init_UART2) refers to main.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(.text.Init_UART2) refers to main.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    main.o(.ARM.exidx.text.Init_UART2) refers to main.o(.text.Init_UART2) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to main.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to main.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Direction_convert) refers to main.o(.text.Direction_convert) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LED_convert) refers to main.o(.text.LED_convert) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Buzzer_convert) refers to main.o(.text.Buzzer_convert) for [Anonymous Symbol]
    main.o(.text.UART2_IRQHandler) refers to main.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(.text.UART2_IRQHandler) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    main.o(.text.UART2_IRQHandler) refers to main.o(.bss.data_thread_id) for data_thread_id
    main.o(.ARM.exidx.text.UART2_IRQHandler) refers to main.o(.text.UART2_IRQHandler) for [Anonymous Symbol]
    main.o(.text.Data_decode) refers to main.o(.text.Buzzer_convert) for Buzzer_convert
    main.o(.text.Data_decode) refers to main.o(.text.Direction_convert) for Direction_convert
    main.o(.text.Data_decode) refers to main.o(.text.LED_convert) for LED_convert
    main.o(.text.Data_decode) refers to main.o(.bss.data) for data
    main.o(.text.Data_decode) refers to main.o(.bss.Buzzer_flag) for Buzzer_flag
    main.o(.text.Data_decode) refers to main.o(.data.Motor_flag) for Motor_flag
    main.o(.text.Data_decode) refers to main.o(.data.LED_flag) for LED_flag
    main.o(.ARM.exidx.text.Data_decode) refers to main.o(.text.Data_decode) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Init_PWM) refers to main.o(.text.Init_PWM) for [Anonymous Symbol]
    main.o(.text.playNoteI) refers to fcmpeq.o(.text) for __aeabi_fcmpeq
    main.o(.text.playNoteI) refers to fmul.o(.text) for __aeabi_fmul
    main.o(.text.playNoteI) refers to fdiv.o(.text) for __aeabi_fdiv
    main.o(.text.playNoteI) refers to ffixi.o(.text) for __aeabi_f2iz
    main.o(.text.playNoteI) refers to idiv_div0.o(.text) for __aeabi_idiv
    main.o(.text.playNoteI) refers to main.o(.bss.tone) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.playNoteI) refers to main.o(.text.playNoteI) for [Anonymous Symbol]
    main.o(.text.playHappyBirthday) refers to fmul.o(.text) for __aeabi_fmul
    main.o(.text.playHappyBirthday) refers to fdiv.o(.text) for __aeabi_fdiv
    main.o(.text.playHappyBirthday) refers to ffixi.o(.text) for __aeabi_f2iz
    main.o(.text.playHappyBirthday) refers to dflti.o(.text) for __aeabi_i2d
    main.o(.text.playHappyBirthday) refers to dmul.o(.text) for __aeabi_dmul
    main.o(.text.playHappyBirthday) refers to dfixui.o(.text) for __aeabi_d2uiz
    main.o(.text.playHappyBirthday) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.playHappyBirthday) refers to main.o(.bss.Buzzer_flag) for Buzzer_flag
    main.o(.text.playHappyBirthday) refers to main.o(.data.notes) for [Anonymous Symbol]
    main.o(.text.playHappyBirthday) refers to main.o(.data.durations) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.playHappyBirthday) refers to main.o(.text.playHappyBirthday) for [Anonymous Symbol]
    main.o(.text.playEndSong) refers to fmul.o(.text) for __aeabi_fmul
    main.o(.text.playEndSong) refers to fdiv.o(.text) for __aeabi_fdiv
    main.o(.text.playEndSong) refers to ffixi.o(.text) for __aeabi_f2iz
    main.o(.text.playEndSong) refers to dflti.o(.text) for __aeabi_i2d
    main.o(.text.playEndSong) refers to dmul.o(.text) for __aeabi_dmul
    main.o(.text.playEndSong) refers to dfixui.o(.text) for __aeabi_d2uiz
    main.o(.text.playEndSong) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.playEndSong) refers to main.o(.bss.Buzzer_flag) for Buzzer_flag
    main.o(.text.playEndSong) refers to main.o(.data.notes2) for [Anonymous Symbol]
    main.o(.text.playEndSong) refers to main.o(.data.durations2) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.playEndSong) refers to main.o(.text.playEndSong) for [Anonymous Symbol]
    main.o(.text.Buzzer_control) refers to main.o(.text.playEndSong) for playEndSong
    main.o(.text.Buzzer_control) refers to main.o(.text.playHappyBirthday) for playHappyBirthday
    main.o(.text.Buzzer_control) refers to main.o(.bss.Buzzer_flag) for Buzzer_flag
    main.o(.ARM.exidx.text.Buzzer_control) refers to main.o(.text.Buzzer_control) for [Anonymous Symbol]
    main.o(.text.PWM01_forward) refers to idiv_div0.o(.text) for __aeabi_idiv
    main.o(.ARM.exidx.text.PWM01_forward) refers to main.o(.text.PWM01_forward) for [Anonymous Symbol]
    main.o(.text.PWM01_back) refers to idiv_div0.o(.text) for __aeabi_idiv
    main.o(.ARM.exidx.text.PWM01_back) refers to main.o(.text.PWM01_back) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.PWM01_rest) refers to main.o(.text.PWM01_rest) for [Anonymous Symbol]
    main.o(.text.PWM23_forward) refers to idiv_div0.o(.text) for __aeabi_idiv
    main.o(.ARM.exidx.text.PWM23_forward) refers to main.o(.text.PWM23_forward) for [Anonymous Symbol]
    main.o(.text.PWM23_back) refers to idiv_div0.o(.text) for __aeabi_idiv
    main.o(.ARM.exidx.text.PWM23_back) refers to main.o(.text.PWM23_back) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.PWM23_rest) refers to main.o(.text.PWM23_rest) for [Anonymous Symbol]
    main.o(.text.Motor_Control) refers to main.o(.text.PWM01_forward) for PWM01_forward
    main.o(.text.Motor_Control) refers to main.o(.text.PWM23_back) for PWM23_back
    main.o(.text.Motor_Control) refers to main.o(.text.PWM01_back) for PWM01_back
    main.o(.text.Motor_Control) refers to main.o(.text.PWM23_forward) for PWM23_forward
    main.o(.text.Motor_Control) refers to main.o(.text.PWM01_rest) for PWM01_rest
    main.o(.text.Motor_Control) refers to main.o(.text.PWM23_rest) for PWM23_rest
    main.o(.text.Motor_Control) refers to main.o(.data.Motor_flag) for Motor_flag
    main.o(.ARM.exidx.text.Motor_Control) refers to main.o(.text.Motor_Control) for [Anonymous Symbol]
    main.o(.text.Init_PIT) refers to main.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(.text.Init_PIT) refers to main.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    main.o(.ARM.exidx.text.Init_PIT) refers to main.o(.text.Init_PIT) for [Anonymous Symbol]
    main.o(.text.PIT_IRQHandler) refers to main.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    main.o(.text.PIT_IRQHandler) refers to main.o(.data.RED_LED_FLAG) for RED_LED_FLAG
    main.o(.text.PIT_IRQHandler) refers to main.o(.data.LED_flag) for LED_flag
    main.o(.text.PIT_IRQHandler) refers to main.o(.bss.Green_LED_index) for Green_LED_index
    main.o(.ARM.exidx.text.PIT_IRQHandler) refers to main.o(.text.PIT_IRQHandler) for [Anonymous Symbol]
    main.o(.text.Red_LED_Control) refers to main.o(.data.RED_LED_FLAG) for RED_LED_FLAG
    main.o(.text.Red_LED_Control) refers to main.o(.bss.test_flag) for test_flag
    main.o(.ARM.exidx.text.Red_LED_Control) refers to main.o(.text.Red_LED_Control) for [Anonymous Symbol]
    main.o(.text.Green_LED_Control) refers to main.o(.data.LED_flag) for LED_flag
    main.o(.text.Green_LED_Control) refers to main.o(.bss.Green_LED_index) for Green_LED_index
    main.o(.text.Green_LED_Control) refers to main.o(.data.Green_LED_array) for Green_LED_array
    main.o(.ARM.exidx.text.Green_LED_Control) refers to main.o(.text.Green_LED_Control) for [Anonymous Symbol]
    main.o(.text.Red_LED_thread) refers to main.o(.text.Red_LED_Control) for Red_LED_Control
    main.o(.ARM.exidx.text.Red_LED_thread) refers to main.o(.text.Red_LED_thread) for [Anonymous Symbol]
    main.o(.text.Green_LED_thread) refers to main.o(.text.Green_LED_Control) for Green_LED_Control
    main.o(.ARM.exidx.text.Green_LED_thread) refers to main.o(.text.Green_LED_thread) for [Anonymous Symbol]
    main.o(.text.Buzzer_thread) refers to main.o(.text.Buzzer_control) for Buzzer_control
    main.o(.ARM.exidx.text.Buzzer_thread) refers to main.o(.text.Buzzer_thread) for [Anonymous Symbol]
    main.o(.text.Motor_thread) refers to main.o(.text.Motor_Control) for Motor_Control
    main.o(.ARM.exidx.text.Motor_thread) refers to main.o(.text.Motor_thread) for [Anonymous Symbol]
    main.o(.text.Data_thread) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(.text.Data_thread) refers to main.o(.text.Data_decode) for Data_decode
    main.o(.ARM.exidx.text.Data_thread) refers to main.o(.text.Data_thread) for [Anonymous Symbol]
    main.o(.text.main) refers to system_mkl25z4.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to main.o(.text.Init_PWM) for Init_PWM
    main.o(.text.main) refers to main.o(.text.Init_PIT) for Init_PIT
    main.o(.text.main) refers to main.o(.text.Init_UART2) for Init_UART2
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.text.main) refers to main.o(.text.Data_thread) for Data_thread
    main.o(.text.main) refers to main.o(.bss.data_thread_id) for data_thread_id
    main.o(.text.main) refers to main.o(.text.Red_LED_thread) for Red_LED_thread
    main.o(.text.main) refers to main.o(.text.Green_LED_thread) for Green_LED_thread
    main.o(.text.main) refers to main.o(.text.Buzzer_thread) for Buzzer_thread
    main.o(.text.main) refers to main.o(.text.Motor_thread) for Motor_thread
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.data.irqRtxLibRef) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to main.o(.text.UART2_IRQHandler) for UART2_IRQHandler
    startup_mkl25z4.o(RESET) refers to main.o(.text.PIT_IRQHandler) for PIT_IRQHandler
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(.text.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_mkl25z4.o(.ARM.exidx.text.SystemInit) refers to system_mkl25z4.o(.text.SystemInit) for [Anonymous Symbol]
    system_mkl25z4.o(.text.SystemCoreClockUpdate) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    system_mkl25z4.o(.text.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data.SystemCoreClock) for SystemCoreClock
    system_mkl25z4.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mkl25z4.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm0.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    fcmpeq.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mkl25z4.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mkl25z4.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Init_UART2), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing main.o(.ARM.exidx.text.Direction_convert), (8 bytes).
    Removing main.o(.ARM.exidx.text.LED_convert), (8 bytes).
    Removing main.o(.ARM.exidx.text.Buzzer_convert), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART2_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.Data_decode), (8 bytes).
    Removing main.o(.ARM.exidx.text.Init_PWM), (8 bytes).
    Removing main.o(.text.playNoteI), (100 bytes).
    Removing main.o(.ARM.exidx.text.playNoteI), (8 bytes).
    Removing main.o(.ARM.exidx.text.playHappyBirthday), (8 bytes).
    Removing main.o(.ARM.exidx.text.playEndSong), (8 bytes).
    Removing main.o(.ARM.exidx.text.Buzzer_control), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM01_forward), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM01_back), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM01_rest), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM23_forward), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM23_back), (8 bytes).
    Removing main.o(.ARM.exidx.text.PWM23_rest), (8 bytes).
    Removing main.o(.ARM.exidx.text.Motor_Control), (8 bytes).
    Removing main.o(.ARM.exidx.text.Init_PIT), (8 bytes).
    Removing main.o(.ARM.exidx.text.PIT_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.Red_LED_Control), (8 bytes).
    Removing main.o(.ARM.exidx.text.Green_LED_Control), (8 bytes).
    Removing main.o(.ARM.exidx.text.Red_LED_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.Green_LED_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.Buzzer_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.Motor_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.Data_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.counter), (4 bytes).
    Removing main.o(.bss.tone), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing startup_mkl25z4.o(HEAP), (0 bytes).
    Removing system_mkl25z4.o(.text), (0 bytes).
    Removing system_mkl25z4.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mkl25z4.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (136 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListSort), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing irq_cm0.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (40 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (112 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (152 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (192 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (188 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (444 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (162 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing fcmpeq.o(.text), (28 bytes).

362 unused section(s) (total 8179 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpeq.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    RTE/Device/MKL25Z128xxx4/startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_MKL25Z4.c                         0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       40  startup_mkl25z4.o(.text)
    .text                                    0x000000fc   Section      164  irq_cm0.o(.text)
    .text                                    0x000001a0   Section        0  memcpya.o(.text)
    .text                                    0x000001c4   Section        0  memseta.o(.text)
    .text                                    0x000001e8   Section        0  fmul.o(.text)
    .text                                    0x00000262   Section        0  fdiv.o(.text)
    .text                                    0x000002e0   Section        0  dmul.o(.text)
    .text                                    0x000003b0   Section        0  dflti.o(.text)
    .text                                    0x000003d8   Section        0  llushr.o(.text)
    [Anonymous Symbol]                       0x000003fa   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    .text                                    0x000003fa   Section        0  iusefp.o(.text)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section        0  ffixi.o(.text)
    .text                                    0x00000444   Section        0  dfixui.o(.text)
    .text                                    0x00000480   Section        0  uidiv_div0.o(.text)
    .text                                    0x000004c0   Section        0  idiv_div0.o(.text)
    .text                                    0x00000510   Section        0  fepilogue.o(.text)
    .text                                    0x00000592   Section        0  depilogue.o(.text)
    .text                                    0x00000650   Section       36  init.o(.text)
    .text                                    0x00000674   Section        0  llshl.o(.text)
    .text                                    0x00000694   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x000006ec   Section        0  main.o(.text.Buzzer_control)
    [Anonymous Symbol]                       0x00000708   Section        0  main.o(.text.Buzzer_convert)
    [Anonymous Symbol]                       0x0000072a   Section        0  main.o(.text.Buzzer_thread)
    [Anonymous Symbol]                       0x00000734   Section        0  main.o(.text.Data_decode)
    __arm_cp.7_0                             0x0000076c   Number         4  main.o(.text.Data_decode)
    __arm_cp.7_1                             0x00000770   Number         4  main.o(.text.Data_decode)
    __arm_cp.7_2                             0x00000774   Number         4  main.o(.text.Data_decode)
    __arm_cp.7_3                             0x00000778   Number         4  main.o(.text.Data_decode)
    [Anonymous Symbol]                       0x0000077c   Section        0  main.o(.text.Data_thread)
    [Anonymous Symbol]                       0x00000792   Section        0  main.o(.text.Direction_convert)
    [Anonymous Symbol]                       0x00000820   Section        0  main.o(.text.Green_LED_Control)
    __arm_cp.23_0                            0x00000858   Number         4  main.o(.text.Green_LED_Control)
    __arm_cp.23_1                            0x0000085c   Number         4  main.o(.text.Green_LED_Control)
    __arm_cp.23_2                            0x00000860   Number         4  main.o(.text.Green_LED_Control)
    __arm_cp.23_3                            0x00000864   Number         4  main.o(.text.Green_LED_Control)
    __arm_cp.23_4                            0x00000868   Number         4  main.o(.text.Green_LED_Control)
    __arm_cp.23_5                            0x0000086c   Number         4  main.o(.text.Green_LED_Control)
    [Anonymous Symbol]                       0x00000870   Section        0  main.o(.text.Green_LED_thread)
    [Anonymous Symbol]                       0x0000087c   Section        0  main.o(.text.Init_PIT)
    __arm_cp.20_2                            0x00000970   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_4                            0x00000974   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_5                            0x00000978   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_6                            0x0000097c   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_7                            0x00000980   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_8                            0x00000984   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_9                            0x00000988   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_10                           0x0000098c   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_11                           0x00000990   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_12                           0x00000994   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_13                           0x00000998   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_14                           0x0000099c   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_15                           0x000009a0   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_16                           0x000009a4   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_17                           0x000009a8   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_18                           0x000009ac   Number         4  main.o(.text.Init_PIT)
    __arm_cp.20_19                           0x000009b0   Number         4  main.o(.text.Init_PIT)
    [Anonymous Symbol]                       0x000009b4   Section        0  main.o(.text.Init_PWM)
    __arm_cp.8_1                             0x00000b08   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_2                             0x00000b0c   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_3                             0x00000b10   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_4                             0x00000b14   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_5                             0x00000b18   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_6                             0x00000b1c   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_7                             0x00000b20   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_8                             0x00000b24   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_9                             0x00000b28   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_10                            0x00000b2c   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_11                            0x00000b30   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_12                            0x00000b34   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_13                            0x00000b38   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_14                            0x00000b3c   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_15                            0x00000b40   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_16                            0x00000b44   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_17                            0x00000b48   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_18                            0x00000b4c   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_19                            0x00000b50   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_20                            0x00000b54   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_21                            0x00000b58   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_22                            0x00000b5c   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_23                            0x00000b60   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_24                            0x00000b64   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_25                            0x00000b68   Number         4  main.o(.text.Init_PWM)
    __arm_cp.8_26                            0x00000b6c   Number         4  main.o(.text.Init_PWM)
    [Anonymous Symbol]                       0x00000b70   Section        0  main.o(.text.Init_UART2)
    __arm_cp.0_0                             0x00000c08   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_1                             0x00000c0c   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_2                             0x00000c10   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_3                             0x00000c14   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_4                             0x00000c18   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_5                             0x00000c1c   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_6                             0x00000c20   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_7                             0x00000c24   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_8                             0x00000c28   Number         4  main.o(.text.Init_UART2)
    __arm_cp.0_9                             0x00000c2c   Number         4  main.o(.text.Init_UART2)
    [Anonymous Symbol]                       0x00000c30   Section        0  main.o(.text.LED_convert)
    MessageQueueGet                          0x00000c53   Thumb Code    76  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000c52   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x00000c9f   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000c9e   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x00000d01   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000d00   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00000d20   Section        0  main.o(.text.Motor_Control)
    __arm_cp.19_0                            0x00000de0   Number         4  main.o(.text.Motor_Control)
    [Anonymous Symbol]                       0x00000de4   Section        0  main.o(.text.Motor_thread)
    [Anonymous Symbol]                       0x00000df0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00000df8   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000e18   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000e1c   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x00000e58   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00000e5c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00000e60   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00000e64   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x00000e68   Section        0  main.o(.text.PIT_IRQHandler)
    __arm_cp.21_0                            0x00000ed4   Number         4  main.o(.text.PIT_IRQHandler)
    __arm_cp.21_2                            0x00000ed8   Number         4  main.o(.text.PIT_IRQHandler)
    __arm_cp.21_3                            0x00000edc   Number         4  main.o(.text.PIT_IRQHandler)
    __arm_cp.21_4                            0x00000ee0   Number         4  main.o(.text.PIT_IRQHandler)
    __arm_cp.21_5                            0x00000ee4   Number         4  main.o(.text.PIT_IRQHandler)
    __arm_cp.21_6                            0x00000ee8   Number         4  main.o(.text.PIT_IRQHandler)
    [Anonymous Symbol]                       0x00000eec   Section        0  main.o(.text.PWM01_back)
    [Anonymous Symbol]                       0x00000f08   Section        0  main.o(.text.PWM01_forward)
    [Anonymous Symbol]                       0x00000f24   Section        0  main.o(.text.PWM01_rest)
    __arm_cp.15_0                            0x00000f30   Number         4  main.o(.text.PWM01_rest)
    __arm_cp.15_1                            0x00000f34   Number         4  main.o(.text.PWM01_rest)
    [Anonymous Symbol]                       0x00000f38   Section        0  main.o(.text.PWM23_back)
    [Anonymous Symbol]                       0x00000f54   Section        0  main.o(.text.PWM23_forward)
    __arm_cp.16_1                            0x00000f70   Number         4  main.o(.text.PWM23_forward)
    [Anonymous Symbol]                       0x00000f74   Section        0  main.o(.text.PWM23_rest)
    __arm_cp.18_0                            0x00000f80   Number         4  main.o(.text.PWM23_rest)
    __arm_cp.18_1                            0x00000f84   Number         4  main.o(.text.PWM23_rest)
    [Anonymous Symbol]                       0x00000f88   Section        0  main.o(.text.Red_LED_Control)
    __arm_cp.22_0                            0x00000fc0   Number         4  main.o(.text.Red_LED_Control)
    __arm_cp.22_1                            0x00000fc4   Number         4  main.o(.text.Red_LED_Control)
    __arm_cp.22_2                            0x00000fc8   Number         4  main.o(.text.Red_LED_Control)
    [Anonymous Symbol]                       0x00000fcc   Section        0  main.o(.text.Red_LED_thread)
    [Anonymous Symbol]                       0x00000fd8   Section        0  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_1                             0x000011d4   Number         4  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_4                             0x000011d8   Number         4  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_8                             0x000011dc   Number         4  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_9                             0x000011e0   Number         4  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_11                            0x000011e4   Number         4  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x000011e8   Section        0  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_0                             0x000012e8   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_1                             0x000012ec   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_2                             0x000012f0   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_3                             0x000012f4   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_4                             0x000012f8   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_5                             0x000012fc   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_6                             0x00001300   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_7                             0x00001304   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_8                             0x00001308   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_9                             0x0000130c   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_10                            0x00001310   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_11                            0x00001314   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_12                            0x00001318   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_13                            0x0000131c   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_14                            0x00001320   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_15                            0x00001324   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_16                            0x00001328   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_17                            0x0000132c   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_18                            0x00001330   Number         4  system_mkl25z4.o(.text.SystemInit)
    __arm_cp.0_19                            0x00001334   Number         4  system_mkl25z4.o(.text.SystemInit)
    ThreadFlagsCheck                         0x00001339   Thumb Code    78  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00001338   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x00001389   Thumb Code    76  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00001388   Section        0  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x000013d0   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x000013d4   Section        0  main.o(.text.UART2_IRQHandler)
    __arm_cp.6_0                             0x000013f8   Number         4  main.o(.text.UART2_IRQHandler)
    __NVIC_ClearPendingIRQ                   0x000013fd   Thumb Code    40  main.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x000013fc   Section        0  main.o(.text.__NVIC_ClearPendingIRQ)
    __arm_cp.1_0                             0x00001424   Number         4  main.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_EnableIRQ                         0x00001429   Thumb Code    40  main.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001428   Section        0  main.o(.text.__NVIC_EnableIRQ)
    __arm_cp.2_0                             0x00001450   Number         4  main.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001454   Section        0  main.o(.text.main)
    __arm_cp.29_0                            0x000014b4   Number         4  main.o(.text.main)
    __arm_cp.29_1                            0x000014b8   Number         4  main.o(.text.main)
    __arm_cp.29_2                            0x000014bc   Number         4  main.o(.text.main)
    __arm_cp.29_3                            0x000014c0   Number         4  main.o(.text.main)
    __arm_cp.29_4                            0x000014c4   Number         4  main.o(.text.main)
    __arm_cp.29_5                            0x000014c8   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x000014cc   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x000014f0   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x000014f4   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x00001518   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x0000151c   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x0000153c   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00001540   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x000015b0   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x000015b4   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x000015d4   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x000015d8   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x0000164c   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00001650   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x00001690   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x00001698   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x0000169a   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00001716   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00001764   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00001796   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x000017c4   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x000017fe   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x0000183d   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0000183c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x000018f8   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0000193c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x000019b8   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00001a1c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBlock                         0x00001a21   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00001a20   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x00001a55   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00001a54   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x00001ad1   Thumb Code    64  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001ad0   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001b10   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00001b44   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x00001b91   Thumb Code    80  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001b90   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00001be0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001bf4   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00001c20   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadPostProcess                   0x00001c39   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001c38   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001c60   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00001c74   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00001c7c   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x00001ca0   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x00001ca4   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x00001cd4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x00001cd8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00001cdc   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x00001cec   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001cf0   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x00001d28   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001d2c   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001d50   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001dc0   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001df0   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001df4   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x00001df8   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x00001dfd   Thumb Code    96  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00001dfc   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00001e58   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00001e5c   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x00001e64   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00001e68   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.35_0                            0x00001ebc   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x00001ec0   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.38_0                            0x00001ee4   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x00001ee8   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x00001f08   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00001f0c   Section        0  main.o(.text.playEndSong)
    __arm_cp.11_1                            0x00001fa8   Number         4  main.o(.text.playEndSong)
    __arm_cp.11_5                            0x00001fac   Number         4  main.o(.text.playEndSong)
    [Anonymous Symbol]                       0x00001fb0   Section        0  main.o(.text.playHappyBirthday)
    __arm_cp.10_0                            0x0000204c   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_1                            0x00002050   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_2                            0x00002054   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_3                            0x00002058   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_4                            0x0000205c   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_5                            0x00002060   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_6                            0x00002064   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_7                            0x00002068   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_8                            0x0000206c   Number         4  main.o(.text.playHappyBirthday)
    __arm_cp.10_9                            0x00002070   Number         4  main.o(.text.playHappyBirthday)
    svcRtxDelay                              0x00002075   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x00002074   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelInitialize                   0x00002089   Thumb Code   324  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00002088   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x000021c4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x000021c8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x000021cd   Thumb Code   128  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x000021cc   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x00002240   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x00002244   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x00002248   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x0000224d   Thumb Code   232  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0000224c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x00002330   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x00002335   Thumb Code   484  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00002334   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x00002500   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00002504   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_2                            0x00002508   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_3                            0x0000250c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_4                            0x00002510   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_5                            0x00002514   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x00002519   Thumb Code   184  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00002518   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxThreadExit                         0x000025d1   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x000025d0   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x00002639   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00002638   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x000026a5   Thumb Code    80  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x000026a4   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    __arm_cp.61_0                            0x000026f0   Number         4  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadNew                          0x000026f5   Thumb Code   492  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x000026f4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x000028c8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x000028cc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x000028d0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x000028d4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x000028d8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_5                            0x000028dc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.__ARM_clz                              0x000028e0   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x0000290e   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x0000291c   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x0000291e   Section       14  handlers.o(i.__scatterload_zeroinit)
    __tagsym$$used.0                         0x0000292c   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x00002994   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x000029d0   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x000029d0   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x000029f4   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x000029f4   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x00002a0c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00002a0c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x00002a30   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x00002a30   Section        0  rtx_kernel.o(.rodata.str1.4)
    durations                                0x1ffff038   Data         116  main.o(.data.durations)
    [Anonymous Symbol]                       0x1ffff038   Section        0  main.o(.data.durations)
    durations2                               0x1ffff0ac   Data         104  main.o(.data.durations2)
    [Anonymous Symbol]                       0x1ffff0ac   Section        0  main.o(.data.durations2)
    notes                                    0x1ffff114   Data         116  main.o(.data.notes)
    [Anonymous Symbol]                       0x1ffff114   Section        0  main.o(.data.notes)
    notes2                                   0x1ffff188   Data         104  main.o(.data.notes2)
    [Anonymous Symbol]                       0x1ffff188   Section        0  main.o(.data.notes2)
    PendST                                   0x1ffff2a0   Data           1  os_systick.o(.bss.PendST)
    [Anonymous Symbol]                       0x1ffff2a0   Section        0  os_systick.o(.bss.PendST)
    os_isr_queue                             0x1ffff2a8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x1ffff2a8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff2e8   Data        4096  rtx_lib.o(.bss.os)
    os_timer_mq_cb                           0x200002e8   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x200002e8   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x2000031c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x2000031c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x2000036c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x2000036c   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200003b0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200003f8   Data         256  rtx_lib.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x200003f8   Section        0  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x200004f8   Data         256  rtx_lib.o(.bss.os.thread.stack)
    STACK                                    0x20000600   Section      256  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x000000e1   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x000000e3   Thumb Code     2  startup_mkl25z4.o(.text)
    ADC0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTA_IRQHandler                         0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTD_IRQHandler                         0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM2_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    UART0_IRQHandler                         0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x000000eb   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000000fd   Thumb Code   132  irq_cm0.o(.text)
    PendSV_Handler                           0x00000181   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x0000018d   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_memcpy                           0x000001a1   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001a1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001a1   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000001c5   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000001c5   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000001c5   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000001d3   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000001d3   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000001d3   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000001d7   Thumb Code    18  memseta.o(.text)
    __aeabi_fmul                             0x000001e9   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x00000263   Thumb Code   124  fdiv.o(.text)
    __aeabi_dmul                             0x000002e1   Thumb Code   202  dmul.o(.text)
    __aeabi_i2d                              0x000003b1   Thumb Code    34  dflti.o(.text)
    __aeabi_llsr                             0x000003d9   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x000003d9   Thumb Code     0  llushr.o(.text)
    OS_Tick_GetIRQn                          0x000003fb   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    __I$use$fp                               0x000003fb   Thumb Code     0  iusefp.o(.text)
    __aeabi_f2iz                             0x00000411   Thumb Code    50  ffixi.o(.text)
    __aeabi_d2uiz                            0x00000445   Thumb Code    50  dfixui.o(.text)
    __aeabi_uidiv                            0x00000481   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000481   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_idiv                             0x000004c1   Thumb Code     0  idiv_div0.o(.text)
    __aeabi_idivmod$div0                     0x000004c1   Thumb Code    74  idiv_div0.o(.text)
    _float_round                             0x00000511   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x00000521   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x00000593   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x000005ad   Thumb Code   164  depilogue.o(.text)
    __scatterload                            0x00000651   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000651   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00000675   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x00000675   Thumb Code     0  llshl.o(.text)
    __decompress                             0x00000695   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x00000695   Thumb Code    86  __dczerorl2.o(.text)
    Buzzer_control                           0x000006ed   Thumb Code    28  main.o(.text.Buzzer_control)
    Buzzer_convert                           0x00000709   Thumb Code    34  main.o(.text.Buzzer_convert)
    Buzzer_thread                            0x0000072b   Thumb Code    10  main.o(.text.Buzzer_thread)
    Data_decode                              0x00000735   Thumb Code    56  main.o(.text.Data_decode)
    Data_thread                              0x0000077d   Thumb Code    22  main.o(.text.Data_thread)
    Direction_convert                        0x00000793   Thumb Code   140  main.o(.text.Direction_convert)
    Green_LED_Control                        0x00000821   Thumb Code    56  main.o(.text.Green_LED_Control)
    Green_LED_thread                         0x00000871   Thumb Code    10  main.o(.text.Green_LED_thread)
    Init_PIT                                 0x0000087d   Thumb Code   244  main.o(.text.Init_PIT)
    Init_PWM                                 0x000009b5   Thumb Code   340  main.o(.text.Init_PWM)
    Init_UART2                               0x00000b71   Thumb Code   152  main.o(.text.Init_UART2)
    LED_convert                              0x00000c31   Thumb Code    34  main.o(.text.LED_convert)
    Motor_Control                            0x00000d21   Thumb Code   192  main.o(.text.Motor_Control)
    Motor_thread                             0x00000de5   Thumb Code    10  main.o(.text.Motor_thread)
    OS_Tick_AcknowledgeIRQ                   0x00000df1   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00000df9   Thumb Code    36  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_Setup                            0x00000e1d   Thumb Code    76  os_systick.o(.text.OS_Tick_Setup)
    PIT_IRQHandler                           0x00000e69   Thumb Code   108  main.o(.text.PIT_IRQHandler)
    PWM01_back                               0x00000eed   Thumb Code    28  main.o(.text.PWM01_back)
    PWM01_forward                            0x00000f09   Thumb Code    28  main.o(.text.PWM01_forward)
    PWM01_rest                               0x00000f25   Thumb Code    12  main.o(.text.PWM01_rest)
    PWM23_back                               0x00000f39   Thumb Code    28  main.o(.text.PWM23_back)
    PWM23_forward                            0x00000f55   Thumb Code    28  main.o(.text.PWM23_forward)
    PWM23_rest                               0x00000f75   Thumb Code    12  main.o(.text.PWM23_rest)
    Red_LED_Control                          0x00000f89   Thumb Code    56  main.o(.text.Red_LED_Control)
    Red_LED_thread                           0x00000fcd   Thumb Code    10  main.o(.text.Red_LED_thread)
    SystemCoreClockUpdate                    0x00000fd9   Thumb Code   508  system_mkl25z4.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x000011e9   Thumb Code   256  system_mkl25z4.o(.text.SystemInit)
    UART2_IRQHandler                         0x000013d5   Thumb Code    36  main.o(.text.UART2_IRQHandler)
    main                                     0x00001455   Thumb Code    96  main.o(.text.main)
    osDelay                                  0x000014cd   Thumb Code    40  rtx_delay.o(.text.osDelay)
    osKernelInitialize                       0x000014f5   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x0000151d   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00001541   Thumb Code   116  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x000015b5   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x000015d9   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxErrorNotify                         0x00001651   Thumb Code    64  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x00001691   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelPreInit                       0x00001699   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x0000169b   Thumb Code   124  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00001717   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00001765   Thumb Code    50  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00001797   Thumb Code    46  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x000017c5   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x000017ff   Thumb Code    62  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x000018f9   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x0000193d   Thumb Code   124  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x000019b9   Thumb Code   104  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001b11   Thumb Code    52  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001b45   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00001be1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001bf5   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00001c21   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadReadyPut                      0x00001c61   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00001c75   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x00001c7d   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x00001ca5   Thumb Code    56  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00001cdd   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001cf1   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001d2d   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001d51   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x00001dc1   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00001e5d   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x00001e69   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x00001ec1   Thumb Code    40  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadNew                              0x00001ee9   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    playEndSong                              0x00001f0d   Thumb Code   156  main.o(.text.playEndSong)
    playHappyBirthday                        0x00001fb1   Thumb Code   156  main.o(.text.playHappyBirthday)
    __ARM_clz                                0x000028e1   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x0000290f   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x0000291d   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x0000291f   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    osRtxConfig                              0x0000292c   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x00002994   Data          56  rtx_lib.o(.rodata)
    osRtxUserSVC                             0x000029cc   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x00002a3c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002a5c   Number         0  anon$$obj.o(Region$$Table)
    Green_LED_array                          0x1ffff000   Data          40  main.o(.data.Green_LED_array)
    LED_flag                                 0x1ffff028   Data           4  main.o(.data.LED_flag)
    Motor_flag                               0x1ffff02c   Data           1  main.o(.data.Motor_flag)
    RED_LED_FLAG                             0x1ffff030   Data           4  main.o(.data.RED_LED_FLAG)
    SystemCoreClock                          0x1ffff034   Data           4  system_mkl25z4.o(.data.SystemCoreClock)
    osRtxInfo                                0x1ffff1f0   Data         164  rtx_kernel.o(.data.os)
    Buzzer_flag                              0x1ffff298   Data           4  main.o(.bss.Buzzer_flag)
    Green_LED_index                          0x1ffff29c   Data           4  main.o(.bss.Green_LED_index)
    data                                     0x1ffff2a1   Data           1  main.o(.bss.data)
    data_thread_id                           0x1ffff2a4   Data           4  main.o(.bss.data_thread_id)
    .bss.os.msgqueue.cb$$Base                0x200002e8   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x2000031c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x2000036c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200003f4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    test_flag                                0x200005f8   Data           4  main.o(.bss.test_flag)
    __initial_sp                             0x20000700   Data           0  startup_mkl25z4.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000d5

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002cf0, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00002af4])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002a5c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          114    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000000   Code   RO          600  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO          629    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO          632    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          634    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO          636    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO          637    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO          639    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO          641    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO          630    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x00000028   Code   RO          116  * .text               startup_mkl25z4.o
    0x000000fc   0x000000fc   0x000000a4   Code   RO          352    .text               RTX_CM0.lib(irq_cm0.o)
    0x000001a0   0x000001a0   0x00000024   Code   RO          609    .text               mc_p.l(memcpya.o)
    0x000001c4   0x000001c4   0x00000024   Code   RO          611    .text               mc_p.l(memseta.o)
    0x000001e8   0x000001e8   0x0000007a   Code   RO          615    .text               mf_p.l(fmul.o)
    0x00000262   0x00000262   0x0000007c   Code   RO          617    .text               mf_p.l(fdiv.o)
    0x000002de   0x000002de   0x00000002   PAD
    0x000002e0   0x000002e0   0x000000d0   Code   RO          619    .text               mf_p.l(dmul.o)
    0x000003b0   0x000003b0   0x00000028   Code   RO          623    .text               mf_p.l(dflti.o)
    0x000003d8   0x000003d8   0x00000022   Code   RO          651    .text               mc_p.l(llushr.o)
    0x000003fa   0x000003fa   0x00000000   Code   RO          653    .text               mc_p.l(iusefp.o)
    0x000003fa   0x000003fa   0x00000006   Code   RO          524    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x00000400   0x00000400   0x00000010   Code   RO          115    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x00000032   Code   RO          625    .text               mf_p.l(ffixi.o)
    0x00000442   0x00000442   0x00000002   PAD
    0x00000444   0x00000444   0x0000003c   Code   RO          627    .text               mf_p.l(dfixui.o)
    0x00000480   0x00000480   0x0000003e   Code   RO          645    .text               mc_p.l(uidiv_div0.o)
    0x000004be   0x000004be   0x00000002   PAD
    0x000004c0   0x000004c0   0x00000050   Code   RO          647    .text               mc_p.l(idiv_div0.o)
    0x00000510   0x00000510   0x00000082   Code   RO          654    .text               mf_p.l(fepilogue.o)
    0x00000592   0x00000592   0x000000be   Code   RO          656    .text               mf_p.l(depilogue.o)
    0x00000650   0x00000650   0x00000024   Code   RO          660    .text               mc_p.l(init.o)
    0x00000674   0x00000674   0x00000020   Code   RO          662    .text               mc_p.l(llshl.o)
    0x00000694   0x00000694   0x00000056   Code   RO          672    .text               mc_p.l(__dczerorl2.o)
    0x000006ea   0x000006ea   0x00000002   PAD
    0x000006ec   0x000006ec   0x0000001c   Code   RO           26    .text.Buzzer_control  main.o
    0x00000708   0x00000708   0x00000022   Code   RO           12    .text.Buzzer_convert  main.o
    0x0000072a   0x0000072a   0x0000000a   Code   RO           54    .text.Buzzer_thread  main.o
    0x00000734   0x00000734   0x00000048   Code   RO           16    .text.Data_decode   main.o
    0x0000077c   0x0000077c   0x00000016   Code   RO           58    .text.Data_thread   main.o
    0x00000792   0x00000792   0x0000008c   Code   RO            8    .text.Direction_convert  main.o
    0x0000081e   0x0000081e   0x00000002   PAD
    0x00000820   0x00000820   0x00000050   Code   RO           48    .text.Green_LED_Control  main.o
    0x00000870   0x00000870   0x0000000a   Code   RO           52    .text.Green_LED_thread  main.o
    0x0000087a   0x0000087a   0x00000002   PAD
    0x0000087c   0x0000087c   0x00000138   Code   RO           42    .text.Init_PIT      main.o
    0x000009b4   0x000009b4   0x000001bc   Code   RO           18    .text.Init_PWM      main.o
    0x00000b70   0x00000b70   0x000000c0   Code   RO            2    .text.Init_UART2    main.o
    0x00000c30   0x00000c30   0x00000022   Code   RO           10    .text.LED_convert   main.o
    0x00000c52   0x00000c52   0x0000004c   Code   RO          584    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000c9e   0x00000c9e   0x00000062   Code   RO          578    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000d00   0x00000d00   0x0000001e   Code   RO          576    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000d1e   0x00000d1e   0x00000002   PAD
    0x00000d20   0x00000d20   0x000000c4   Code   RO           40    .text.Motor_Control  main.o
    0x00000de4   0x00000de4   0x0000000a   Code   RO           56    .text.Motor_thread  main.o
    0x00000dee   0x00000dee   0x00000002   PAD
    0x00000df0   0x00000df0   0x00000008   Code   RO          522    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x00000df8   0x00000df8   0x00000024   Code   RO          518    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x00000e1c   0x00000e1c   0x0000004c   Code   RO          516    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x00000e68   0x00000e68   0x00000084   Code   RO           44    .text.PIT_IRQHandler  main.o
    0x00000eec   0x00000eec   0x0000001c   Code   RO           30    .text.PWM01_back    main.o
    0x00000f08   0x00000f08   0x0000001c   Code   RO           28    .text.PWM01_forward  main.o
    0x00000f24   0x00000f24   0x00000014   Code   RO           32    .text.PWM01_rest    main.o
    0x00000f38   0x00000f38   0x0000001c   Code   RO           36    .text.PWM23_back    main.o
    0x00000f54   0x00000f54   0x00000020   Code   RO           34    .text.PWM23_forward  main.o
    0x00000f74   0x00000f74   0x00000014   Code   RO           38    .text.PWM23_rest    main.o
    0x00000f88   0x00000f88   0x00000044   Code   RO           46    .text.Red_LED_Control  main.o
    0x00000fcc   0x00000fcc   0x0000000a   Code   RO           50    .text.Red_LED_thread  main.o
    0x00000fd6   0x00000fd6   0x00000002   PAD
    0x00000fd8   0x00000fd8   0x00000210   Code   RO          127    .text.SystemCoreClockUpdate  system_mkl25z4.o
    0x000011e8   0x000011e8   0x00000150   Code   RO          125    .text.SystemInit    system_mkl25z4.o
    0x00001338   0x00001338   0x0000004e   Code   RO          282    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x00001386   0x00001386   0x00000002   PAD
    0x00001388   0x00001388   0x0000004c   Code   RO          373    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x000013d4   0x000013d4   0x00000028   Code   RO           14    .text.UART2_IRQHandler  main.o
    0x000013fc   0x000013fc   0x0000002c   Code   RO            4    .text.__NVIC_ClearPendingIRQ  main.o
    0x00001428   0x00001428   0x0000002c   Code   RO            6    .text.__NVIC_EnableIRQ  main.o
    0x00001454   0x00001454   0x00000078   Code   RO           60    .text.main          main.o
    0x000014cc   0x000014cc   0x00000028   Code   RO          335    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x000014f4   0x000014f4   0x00000028   Code   RO          139    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x0000151c   0x0000151c   0x00000024   Code   RO          149    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00001540   0x00001540   0x00000074   Code   RO          550    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x000015b4   0x000015b4   0x00000024   Code   RO          544    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x000015d8   0x000015d8   0x00000078   Code   RO          548    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001650   0x00001650   0x00000040   Code   RO          104    .text.osRtxErrorNotify  rtx_config.o
    0x00001690   0x00001690   0x00000008   Code   RO          102    .text.osRtxIdleThread  rtx_config.o
    0x00001698   0x00001698   0x00000002   Code   RO          137    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x0000169a   0x0000169a   0x0000007c   Code   RO          435    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x00001716   0x00001716   0x0000004e   Code   RO          437    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x00001764   0x00001764   0x00000032   Code   RO          433    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x00001796   0x00001796   0x0000002e   Code   RO          450    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x000017c4   0x000017c4   0x0000003a   Code   RO          452    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x000017fe   0x000017fe   0x0000003e   Code   RO          448    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x0000183c   0x0000183c   0x000000bc   Code   RO          574    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x000018f8   0x000018f8   0x00000044   Code   RO          398    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x0000193c   0x0000193c   0x0000007c   Code   RO          503    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x000019b8   0x000019b8   0x00000068   Code   RO          505    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x00001a20   0x00001a20   0x00000034   Code   RO          222    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x00001a54   0x00001a54   0x0000007c   Code   RO          230    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x00001ad0   0x00001ad0   0x00000040   Code   RO          226    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x00001b10   0x00001b10   0x00000034   Code   RO          212    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x00001b44   0x00001b44   0x0000004c   Code   RO          220    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x00001b90   0x00001b90   0x00000050   Code   RO          306    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x00001be0   0x00001be0   0x00000014   Code   RO          204    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x00001bf4   0x00001bf4   0x0000002c   Code   RO          202    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x00001c20   0x00001c20   0x00000018   Code   RO          208    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x00001c38   0x00001c38   0x00000026   Code   RO          280    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x00001c5e   0x00001c5e   0x00000002   PAD
    0x00001c60   0x00001c60   0x00000014   Code   RO          210    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x00001c74   0x00001c74   0x00000006   Code   RO          214    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x00001c7a   0x00001c7a   0x00000002   PAD
    0x00001c7c   0x00001c7c   0x00000028   Code   RO          218    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x00001ca4   0x00001ca4   0x00000038   Code   RO          232    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x00001cdc   0x00001cdc   0x00000014   Code   RO          216    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00001cf0   0x00001cf0   0x0000003c   Code   RO          228    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x00001d2c   0x00001d2c   0x00000022   Code   RO          224    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x00001d4e   0x00001d4e   0x00000002   PAD
    0x00001d50   0x00001d50   0x00000070   Code   RO          501    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x00001dc0   0x00001dc0   0x0000003c   Code   RO          357    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00001dfc   0x00001dfc   0x00000060   Code   RO          359    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x00001e5c   0x00001e5c   0x0000000c   Code   RO          264    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00001e68   0x00001e68   0x00000058   Code   RO          272    .text.osThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x00001ec0   0x00001ec0   0x00000028   Code   RO          278    .text.osThreadFlagsWait  RTX_CM0.lib(rtx_thread.o)
    0x00001ee8   0x00001ee8   0x00000024   Code   RO          236    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x00001f0c   0x00001f0c   0x000000a4   Code   RO           24    .text.playEndSong   main.o
    0x00001fb0   0x00001fb0   0x000000c4   Code   RO           22    .text.playHappyBirthday  main.o
    0x00002074   0x00002074   0x00000012   Code   RO          339    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x00002086   0x00002086   0x00000002   PAD
    0x00002088   0x00002088   0x00000144   Code   RO          177    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x000021cc   0x000021cc   0x00000080   Code   RO          179    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x0000224c   0x0000224c   0x000000e8   Code   RO          586    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002334   0x00002334   0x000001e4   Code   RO          572    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00002518   0x00002518   0x000000b8   Code   RO          582    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x000025d0   0x000025d0   0x00000068   Code   RO          310    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00002638   0x00002638   0x0000006c   Code   RO          318    .text.svcRtxThreadFlagsSet  RTX_CM0.lib(rtx_thread.o)
    0x000026a4   0x000026a4   0x00000050   Code   RO          324    .text.svcRtxThreadFlagsWait  RTX_CM0.lib(rtx_thread.o)
    0x000026f4   0x000026f4   0x000001ec   Code   RO          234    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x000028e0   0x000028e0   0x0000002e   Code   RO          658    i.__ARM_clz         mf_p.l(depilogue.o)
    0x0000290e   0x0000290e   0x0000000e   Code   RO          666    i.__scatterload_copy  mc_p.l(handlers.o)
    0x0000291c   0x0000291c   0x00000002   Code   RO          667    i.__scatterload_null  mc_p.l(handlers.o)
    0x0000291e   0x0000291e   0x0000000e   Code   RO          668    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x0000292c   0x0000292c   0x00000068   Data   RO           89    .rodata             rtx_lib.o
    0x00002994   0x00002994   0x00000038   Data   RO           92    .rodata             rtx_lib.o
    0x000029cc   0x000029cc   0x00000004   Data   RO           91    .rodata.osRtxUserSVC  rtx_lib.o
    0x000029d0   0x000029d0   0x00000024   Data   RO           86    .rodata.os_idle_thread_attr  rtx_lib.o
    0x000029f4   0x000029f4   0x00000018   Data   RO           88    .rodata.os_timer_mq_attr  rtx_lib.o
    0x00002a0c   0x00002a0c   0x00000024   Data   RO           87    .rodata.os_timer_thread_attr  rtx_lib.o
    0x00002a30   0x00002a30   0x0000000b   Data   RO          191    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x00002a3b   0x00002a3b   0x00000001   PAD
    0x00002a3c   0x00002a3c   0x00000020   Data   RO          665    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x1ffff000, Load base: 0x00002a5c, Size: 0x00000294, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000098])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   COMPRESSED   0x00000028   Data   RW           76    .data.Green_LED_array  main.o
    0x1ffff028   COMPRESSED   0x00000004   Data   RW           63    .data.LED_flag      main.o
    0x1ffff02c   COMPRESSED   0x00000001   Data   RW           65    .data.Motor_flag    main.o
    0x1ffff02d   COMPRESSED   0x00000003   PAD
    0x1ffff030   COMPRESSED   0x00000004   Data   RW           73    .data.RED_LED_FLAG  main.o
    0x1ffff034   COMPRESSED   0x00000004   Data   RW          129    .data.SystemCoreClock  system_mkl25z4.o
    0x1ffff038   COMPRESSED   0x00000074   Data   RW           70    .data.durations     main.o
    0x1ffff0ac   COMPRESSED   0x00000068   Data   RW           72    .data.durations2    main.o
    0x1ffff114   COMPRESSED   0x00000074   Data   RW           69    .data.notes         main.o
    0x1ffff188   COMPRESSED   0x00000068   Data   RW           71    .data.notes2        main.o
    0x1ffff1f0   COMPRESSED   0x000000a4   Data   RW          192    .data.os            RTX_CM0.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x1ffff298, Load base: 0x00002af4, Size: 0x00001468, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff298        -       0x00000004   Zero   RW           64    .bss.Buzzer_flag    main.o
    0x1ffff29c        -       0x00000004   Zero   RW           74    .bss.Green_LED_index  main.o
    0x1ffff2a0        -       0x00000001   Zero   RW          534    .bss.PendST         RTX_CM0.lib(os_systick.o)
    0x1ffff2a1        -       0x00000001   Zero   RW           67    .bss.data           main.o
    0x1ffff2a2   0x00002af4   0x00000002   PAD
    0x1ffff2a4        -       0x00000004   Zero   RW           66    .bss.data_thread_id  main.o
    0x1ffff2a8        -       0x00001040   Zero   RW           85    .bss.os             rtx_lib.o
    0x200002e8        -       0x00000034   Zero   RW           95    .bss.os.msgqueue.cb  rtx_lib.o
    0x2000031c        -       0x00000050   Zero   RW           96    .bss.os.msgqueue.mem  rtx_lib.o
    0x2000036c        -       0x00000088   Zero   RW           93    .bss.os.thread.cb   rtx_lib.o
    0x200003f4   0x00002af4   0x00000004   PAD
    0x200003f8        -       0x00000200   Zero   RW           94    .bss.os.thread.stack  rtx_lib.o
    0x200005f8        -       0x00000004   Zero   RW           75    .bss.test_flag      main.o
    0x200005fc   0x00002af4   0x00000004   PAD
    0x20000600        -       0x00000100   Zero   RW          112    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2558        396          0        489         17       8712   main.o
        72         20          0          0          0        738   rtx_config.o
         0          0        260          0       4940       5481   rtx_lib.o
        56         30        192          0        256        908   startup_mkl25z4.o
       864        100          0          4          0       3334   system_mkl25z4.o

    ----------------------------------------------------------------------
      3558        546        484        496       5223      19173   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          3         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          0          0          0        496   irq_cm0.o
       126         20          0          0          1       2766   os_systick.o
        58          4          0          0          0       2753   rtx_delay.o
       530         28         11        164          0      16105   rtx_kernel.o
       252          0          0          0          0       2564   rtx_memory.o
       166          0          0          0          0      14282   rtx_mempool.o
      1564         40          0          0          0      17889   rtx_msgqueue.o
        68          0          0          0          0       9201   rtx_mutex.o
       340         14          0          0          0       4635   rtx_system.o
      1848         64          0          0          0      30867   rtx_thread.o
       232         20          0          0          0      10018   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        80          6          0          0          0         72   idiv_div0.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        62          0          0          0          0         72   uidiv_div0.o
       236          0          0          0          0        216   depilogue.o
        60         10          0          0          0         68   dfixui.o
        40          6          0          0          0         68   dflti.o
       208          6          0          0          0         88   dmul.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        50          0          0          0          0         60   ffixi.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      6790        242         12        164          1     112872   Library Totals
        20          0          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5348        198         11        164          1     111576   RTX_CM0.lib
       452         22          0          0          0        508   mc_p.l
       970         22          0          0          0        788   mf_p.l

    ----------------------------------------------------------------------
      6790        242         12        164          1     112872   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     10348        788        496        660       5224     131417   Grand Totals
     10348        788        496        152       5224     131417   ELF Image Totals (compressed)
     10348        788        496        152          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                10844 (  10.59kB)
    Total RW  Size (RW Data + ZI Data)              5884 (   5.75kB)
    Total ROM Size (Code + RO Data + RW Data)      10996 (  10.74kB)

==============================================================================

